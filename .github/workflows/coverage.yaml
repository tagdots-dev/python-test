name: coverage

on:
  schedule:
    - cron: '15 22 * * 0'

  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12.x'

permissions:
  contents: read

jobs:
  coverage-test:

    permissions:
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest

    outputs:
      COV_PER: ${{ steps.get-coverage-results.outputs.COV_PER }}
      COV_RUN: ${{ steps.get-coverage-results.outputs.COV_RUN }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2

    - name: Setup Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install python dependencies
      run: |
        make test-install

    - id: run-coverage-tests
      run: |
        coverage run tests/test_run.py -v
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PYTHONUNBUFFERED: "1"

    - id: export-coverage
      run: |
        coverage html
        coverage report
      env:
        PYTHONUNBUFFERED: "1"

    - id: get-coverage-results
      run: |
        # get coverage results
        ls -l htmlcov/
        echo "COV_RUN=${{ steps.run-coverage-tests.outcome }}"            >> "$GITHUB_OUTPUT"
        echo "COV_PER=$(coverage report | grep TOTAL | awk '{print $6}')" >> "$GITHUB_OUTPUT"

    - name: Upload artifacts
      id: artifact-upload
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        path: htmlcov/
        if-no-files-found: error
        retention-days: 3
        overwrite: true
        compression-level: 6

    - name: Checkout source code of coverage branch
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
      with:
        ref: coverage

    - name: setup file - coverage.json
      # create coverage.json from template.json
      # { "schemaVersion": 1, "label": "TPL_LABEL", "labelColor": "TPL_LCOLOR", "message": "TPL_MESSAGE", "color": "TPL_COLOR" }
      run: |
        # setup file - coverage.json
        # use template.json to create/replace coverage.json
        sed -e 's/TPL_LABEL/Coverage/g;s/TPL_LCOLOR/2e2e2e/g;s/TPL_MESSAGE/${{ steps.get-coverage-results.outputs.COV_PER }}/g;s/TPL_COLOR/2ade2a/g' template.json > coverage.json

    - run: git config --global user.email "mona-lisa@tagdots.com"
    - run: git config --global user.name "Mona Lisa"
    - run: git add coverage.json
    - run: git commit -m 'create/update coverage.json'
    - run: git push -u origin coverage

  notify-slack:
    if: always()
    needs: [coverage-test]

    runs-on: ubuntu-latest

    steps:

    - name: Post message to Slack
      uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
      with:
        method: chat.postMessage
        token: "${{ secrets.SECRET_SLACK_APP_GITHUB_BOT }}"
        payload: |
          channel: "${{ secrets.SECRET_SLACK_CHANNEL_CRON_TASKS }}"
          text: "*Repository : ${{ github.repository }}*\n*Workflow   : ${{ github.workflow }}*
            ```
            Cron Job Result    : ${{ needs.coverage-test.result }}\n
            Coverage Run       : ${{ needs.coverage-test.outputs.COV_RUN }}\n
            Coverage Percentage: ${{ needs.coverage-test.outputs.COV_PER }}\n
            Workflow URL       : https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            ```"
