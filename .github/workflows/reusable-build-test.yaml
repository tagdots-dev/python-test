---
# NOTE: this file is managed by terraform

name: re-build-test

on:  # yamllint disable-line rule:truthy
  workflow_call:

  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12.x'

permissions:
  contents: write
  pull-requests: write

jobs:

  build:
    runs-on: ubuntu-latest

    outputs:
      ARTIFACT_ID: ${{ steps.set-artifact-id.outputs.ARTIFACT_ID }}
      BUILD_VERSION: ${{ steps.set-build-version.outputs.BUILD_VERSION }}
      WORKFLOW_RUN_ID: ${{ steps.set-workflow-runid.outputs.WORKFLOW_RUN_ID }}

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Make build
      run: make build

    # set and get build version
    - name: Set Build Version
      id: set-build-version
      run: |
        echo "BUILD_VERSION=$(python src/*/run.py --version | awk '{print $3}')" >> "$GITHUB_OUTPUT"

    - name: Get Build Version
      id: get-build-version
      run: |
        echo "Build Version: ${{ steps.set-build-version.outputs.BUILD_VERSION }}"

    # set and get artifacts
    - name: Upload distributions
      id: artifact-upload
      uses: actions/upload-artifact@v4
      with:
        path: dist/
        if-no-files-found: error
        retention-days: 3
        overwrite: true
        compression-level: 6

    - name: Set Artifact ID
      id: set-artifact-id
      run: |
        echo "ARTIFACT_ID=${{ steps.artifact-upload.outputs.artifact-id }}" >> "$GITHUB_OUTPUT"

    - shell: bash
      run: |
        # output artifact id
        echo "ARTIFACT_ID: ${{ steps.artifact-upload.outputs.artifact-id }}"

    # set and get github workflow_run id
    - name: Set Workflow Run ID
      id: set-workflow-runid
      run: |
        echo "WORKFLOW_RUN_ID=${{ github.run_id }}" >> "$GITHUB_OUTPUT"

    - shell: bash
      run: |
        # output workflow run-id
        echo "Workflow Run ID: ${{ github.run_id }}"

  test:
    needs: build

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install test dependencies
      run: make test-install

    - name: Make Test
      run: make test
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PYTHONUNBUFFERED: "1"
