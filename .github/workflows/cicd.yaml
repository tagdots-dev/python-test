---
# NOTE: this file is managed by terraform

name: CICD

on:  # yamllint disable-line rule:truthy
  pull_request:

    branches:
      - main

    types:
      - closed
      - edited
      - opened
      - synchronize

  push:
    branches:
      - test-*

  workflow_dispatch:

permissions:
  contents: write

jobs:

  pre-commit:
    uses: ./.github/workflows/reusable-pre-commit.yaml

  build-test:
    uses: ./.github/workflows/reusable-testings.yaml

  push-tag:
    # condition: pull request is merged and closed
    if: ${{ startsWith(github.head_ref, 'release/') && github.event.pull_request.state == 'closed' }}

    needs: [pre-commit, build-test]

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - shell: bash
      run: |
        # create and push a lightweight tag
        git tag ${{ needs.build-test.outputs.BUILD_VERSION }}
        git push origin ${{ needs.build-test.outputs.BUILD_VERSION }}

  publish-pypi-test:

    needs: [push-tag]

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - run: |
        # install dependencies
        python -m pip install --upgrade pip
        python -m pip install build twine

    # - name: Get software build version from build-test
    #   run: echo "${{ needs.build-test.outputs.BUILD_VERSION }}"

    - name: Download distributions
      id: artifact-download
      uses: actions/download-artifact@v4
      with:
        path: dist/

    - name: Publish to test.pypi.org
      env:
          PYPI_USERNAME: __token__
          PYPI_TEST_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      run: |
        # publish to test.pypi.org
        tree dist/
        python -m twine check dist/artifact/*
        python -m twine upload --repository testpypi dist/artifact/*

  validate-pypi-test:

    needs: [publish-pypi-test]

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - run: |
        # download from test.pypi.org
        # python -m pip install pkg-15903
        # python -m twine upload --repository testpypi dist/artifact/*
        echo "hello"
