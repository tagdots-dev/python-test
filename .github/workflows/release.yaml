---
# on push to main > build package > upload artifacts

name: release

on:
  pull_request:

    types:
      - closed

    branches:
      - main

  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12.10'

jobs:
  release:
    if: startsWith(github.head_ref, 'release/v')

    runs-on: ubuntu-latest
    steps:

    - name: Get release branch
      id: get-release-branch
      run: |
        # get release branch and version
        GIT_HEAD_REF="${{ github.head_ref }}"
        GIT_BRANCH=${GIT_HEAD_REF}" >> "$GITHUB_OUTPUT"
        GIT_BRANCH_VERSION=${GIT_HEAD_REF#release/v}" >> "$GITHUB_OUTPUT"

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Build and Package Application
      run: |
        # get latest build
        python -m pip install -U build

        # build package
        python -m build

    - name: Get Build Version
      id: get-build-version
      run: |
        BUILD_VERSION="$(python src/pkg_15903/run.py --version | awk '{print $3}')"  >> "$GITHUB_OUTPUT"

    - name: Upload distributions
      id: artifact-upload
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: dist/
        if-no-files-found: error
        retention-days: 3
        overwrite: true

    - name: Get Outputs
      run: |
        # get various outputs
        echo 'Git branch name   : ${{ steps.get-release-branch.outputs.GIT_BRANCH }}'
        echo 'Git branch version: ${{ steps.get-release-branch.outputs.GIT_BRANCH_VERSION }}'
        echo 'Build version     : ${{ steps.get-build-version.outputs.BUILD_VERSION }}'
        echo 'Artifact ID       : ${{ steps.artifact-upload.outputs.artifact-id }}'

        if: ${{ steps.get-release-branch.outputs.GIT_BRANCH_VERSION == steps.get-build-version.outputs.BUILD_VERSION }}
        run: echo "git branch version is equal to bulid version"

        if: ${{ steps.get-release-branch.outputs.GIT_BRANCH_VERSION != steps.get-build-version.outputs.BUILD_VERSION }}
        run: echo "git branch version is NOT equal to bulid version"
