---

name: workflow-tests

on:  # yamllint disable-line rule:truthy
  # push:
  workflow_dispatch:

permissions:
  contents: read

env:
  WF_ENV_VAR: 'default'

jobs:
  job-data-01:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    env:
      JOB_DATA_ENV: 'hello'

    steps:
    - name: Get Outputs from github cotext
      id: get_github_object
      run: |
        # get outputs
        # parse github object into Json
        echo "GH_OBJ=${{ toJson(github) }}"

    # Test 1 - pass data across steps - FAILURE
    - name: Step 1 - Assign value to a new step variable
      id: assgin_value_to_step_1
      run: |
        # assign value to step 1
        STEP_1_GH_REF_NAME="${{ github.ref_name }}"
        echo "STEP_1_GH_REF_NAME: ${STEP_1_GH_REF_NAME}"
    - name: Step 2 - Get value from Step 1 - FAILURE
      id: get_value_from_step_1
      run: |
        # get value from step 1
        # ${STEP_1_GH_REF_NAME} is NOT passed to STEP_2_GH_REF_NAME
        # because STEP_1_GH_REF_NAME is not visible outside of Step 1
        #
        STEP_2_GH_REF_NAME=${STEP_1_GH_REF_NAME}
        echo "STEP_2_GH_REF_NAME: ${STEP_2_GH_REF_NAME}"

    # Test 2 - pass data across steps by using $GITHUB_OUTPUT- SUCCESS
    - name: Step 3 - Assign value to a new step variable
      id: assgin_value_to_step_3
      run: |
        # assign value to step 3
        echo "STEP_3_GH_REF_NAME=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
    - name: Step 4 - Get value from Step 3 - SUCCESS
      id: get_value_from_step_3
      run: |
        # get value from step 3
        STEP_4_GH_REF_NAME="${{ steps.assgin_value_to_step_3.outputs.STEP_3_GH_REF_NAME }}"
        echo "STEP_4_GH_REF_NAME: ${STEP_4_GH_REF_NAME}"

    # Test 3 - pass data from job scope to steps
    - name: Step 5 - Get value from Job job-data-01 environment variable - FAILURE
      id: get_value_from_job_data
      run: |
        # assign value to step 5
        echo "JOB_DATA_ENV : ${JOB_DATA_ENV}"
        #
        echo "STEP_5_JOB_DATA: ${STEP_5_JOB_DATA}"

    - name: Step 6 - Assign value to environment variable
      id: assign_value_from_job_data
      run: |
        echo "STEP_6_JOB_DATA=${JOB_DATA_ENV}" >> "$GITHUB_OUTPUT"

    - name: Step 7 - Get value from across steps - SUCCESS
      run: |
        echo "STEP_6_JOB_DATA: ${{ steps.assign_value_from_job_data.outputs.STEP_6_JOB_DATA }}"

    outputs:
      JOB_DATA: ${{ steps.assign_value_from_job_data.outputs.STEP_6_JOB_DATA }}

  job-data-02:
    needs: [job-data-01]
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    env:
      JOB_DATA_02_ENV: 'world'

    steps:
    # Test 4 - get data from another job scope
    - name: Step 1 - Get value from Job job-data-01 step 5 output - SUCCESS
      id: get_value_from_job_data_01_step_5
      run: |
        echo "Job_Data_02 from STEP_5_JOB_DATA: ${{ needs.job-data-01.outputs.JOB_DATA }}"

    # Test 5 - get data from workflow scope
    - name: Step 2 - Get value from Workflow environment variable - SUCCESS
      run: |
        echo "Workflow Env Var: ${{ env.WF_ENV_VAR }}"

    # Test 6 - assign data to an env var accessible from all steps
    - name: Step 3 - Assign value to a new environment variable within the job
      id: assign_value_to_wf_env_var
      run: |
        echo "WF_ENV_VAR_02=LondonBridge" >> "$GITHUB_ENV"
    - name: Step 4 - Get value of the new environment variable - SUCCESS
      id: get_value_to_new_env_var
      run: |
          echo "WF_ENV_VAR_02: $WF_ENV_VAR_02"

  job-data-03:
    needs: [job-data-02]
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    steps:
      # Test 7 - get data from job-data-02 step 3 env var
      - name: Step 1 - Get value from job-data-02 step 3 environment variable - FAILURE
        run: |
          echo "WF_ENV_VAR_02: $WF_ENV_VAR_02"

      # Test 8 - get data from job-data-02 step 3 assigned new variable
      - name: Step 2 - Get value from job-data-02 step 3 environment variable - FAILURE
        run: |
          echo "WF_ENV_VAR_02: ${{ toJson(needs.job-data-02) }}"
