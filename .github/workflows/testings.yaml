---

name: testings

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - test-*

  pull_request:
    branches:
      - main

  workflow_dispatch:

  # workflow_run:
  #   workflows:
  #     - pre-commit

  #   types:
  #     - completed

permissions:
  contents: read

jobs:
  get-release:

    if: startsWith(github.head_ref, 'release/')

    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ubuntu-latest

    outputs:
      BRANCH_HEAD_REF: ${{ steps.get-release-branch.outputs.GITHUB_HEAD_REF }}
      BRANCH_SPEC_VER: ${{ steps.get-release-branch.outputs.GITHUB_SPEC_VER }}

    steps:

    - name: Get Source Branch Name and Spec-Version of the Pull Request
      # checkov:skip=CKV_GHA_2:Ensure run commands are not vulnerable to shell injection
      id: get-release-branch
      run: |
        GITHUB_HEAD_REF=${{ github.head_ref }}
        GITHUB_SPEC_VER=${GITHUB_HEAD_REF#release/}
        # get release branch info
        echo "GITHUB_HEAD_REF=${{ github.head_ref }}"      >> "$GITHUB_OUTPUT"
        echo "GITHUB_SPEC_VER=${GITHUB_HEAD_REF#release/}" >> "$GITHUB_OUTPUT"
        #
        echo "Branch Release name         : ${GITHUB_HEAD_REF}"
        echo "Branch Release spec-version : ${GITHUB_SPEC_VER}"

  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    outputs:
      BUILD_VERSION: ${{ steps.get-build-version.outputs.BUILD_VERSION }}

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Make build
      run: make build

    - name: Get Build Version
      id: get-build-version
      run: |
        echo "BUILD_VERSION=$(pkg-15903 --version | awk '{print $3}')" >> "$GITHUB_OUTPUT"
        echo "Build Version: ${BUILD_VERSION}"

    - name: Upload distributions
      id: artifact-upload
      uses: actions/upload-artifact@v4
      with:
        path: dist/
        if-no-files-found: error
        retention-days: 3
        overwrite: true
        compression-level: 6

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install test dependencies
      run: python -m pip install -e .[test]

    - name: Make Test
      run: make test

  prep-for-release:

    needs: [build, test, get-release]

    if: startsWith(github.head_ref, 'release/')

    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ubuntu-latest

    steps:

    - name: hello
      run: echo "hello"

    - name: outputs from job - get outputs from various jobs
      run: |
        echo "${{ needs.get-release.outputs.BRANCH_HEAD_REF }}"
        echo "${{ needs.get-release.outputs.BRANCH_SPEC_VER }}"
        echo "${{ needs.build.outputs.BUILD_VERSION }}"
