---

name: testings

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - test-*

  pull_request:
    branches:
      - main

  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: make build
      run: make build

    - name: get build version
      id: get-build-version
      run: |
        # get build version
        echo "BUILD_VERSION=$(pkg-15903 --version | awk '{print $3}')" >> "$GITHUB_OUTPUT"

    outputs:
      BUILD_VERSION: ${{ steps.get-build-version.outputs.BUILD_VERSION }}

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install test dependencies
      run: python -m pip install -e .[test]

    - name: make test
      run: make test

  validatation:
    needs: [build, test]
    # : if startsWith(github.head_ref, 'release/')
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest
    steps:

    - name: Get Outputs
      run: |
        # get outputs
        # about toJson of github env
        echo "GH_ENV=${{ toJson(github.env) }}"

        # about getting the github.ref_name and how to manipulate it
        GIT_REF_NAME="${{ github.ref_name }}"
        echo "Branch Release name   : ${{ github.ref_name }}"
        echo "Branch Release name   : $GIT_REF_NAME"
        echo "Branch Release name   : ${GIT_REF_NAME}"
        echo "Software Build version: ${{ needs.build.outputs.BUILD_VERSION }}"

        # about assigning a value to a  variable and how to manipulate it
        GIT_REF_NAME="release/1.0.1"
        echo "Branch Release name   : ${{ github.ref_name }}"
        echo "Branch Release version: ${GIT_REF_NAME#release/}"
        echo "Software Build version: ${{ needs.build.outputs.BUILD_VERSION }}"
