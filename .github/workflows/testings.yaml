---

name: testings

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - test-*

  pull_request:
    branches:
      - main

  workflow_dispatch:

permissions:
  contents: read

env:
  GIT_REF_NAME: 'default'
  RE_GIT_REF_NAME: 'default'

jobs:
  validate:

    if: startsWith(github.head_ref, 'release/')

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    outputs:
      branch_head_ref: ${{ steps.get_branch_data.outputs.GITHUB_HEAD_REF }}
      branch_spec_ver: ${{ steps.get_branch_data.outputs.GITHUB_SPEC_VER }}

    steps:

    - name: Get Branch Name and Named-Version
      id: get_branch_data
      run: |
        # get branch data
        echo "GITHUB_HEAD_REF=${{ github.head_ref }}"      >> "$GITHUB_OUTPUT"
        echo "GITHUB_SPEC_VER=${GITHUB_HEAD_REF#release/}" >> "$GITHUB_OUTPUT"
        #
        echo "Branch Release name         : ${GITHUB_HEAD_REF}"
        echo "Branch Release spec-version : ${GITHUB_SPEC_VER}"

    # - name: Evaluate
    #   run: |
    #     # evaluate
    #     echo "RE_GIT_REF_NAME: ${RE_GIT_REF_NAME}"
    #     echo "GIT_REF_NAME   : ${GIT_REF_NAME}"
    #     if [[ "${RE_GIT_REF_NAME}" == "${GIT_REF_NAME}" ]]; then
    #       echo "both of the variables are the same"
    #     else
    #       echo "both of the variables are different"
    #     fi

  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: make build
      run: make build

    - name: get build version
      id: get-build-version
      run: |
        # get build version
        echo "BUILD_VERSION=$(pkg-15903 --version | awk '{print $3}')" >> "$GITHUB_OUTPUT"

    outputs:
      BUILD_VERSION: ${{ steps.get-build-version.outputs.BUILD_VERSION }}

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install test dependencies
      run: python -m pip install -e .[test]

    - name: make test
      run: make test
