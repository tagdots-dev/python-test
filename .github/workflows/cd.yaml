---

name: CD

on:  # yamllint disable-line rule:truthy

  pull_request:

    branches:
      - main

    types:
      - closed

env:
  PACKAGE_NAME: pkg-15903
  PYTHON_VERSION: '3.12.x'

permissions:
  contents: read

jobs:

  push-git-tag:
    # ISSUE - failed-CI release branch, if merged, can continue through this CD workflow
    if: ${{ startsWith(github.head_ref, 'release/') && github.event.pull_request.merged == true }}

    runs-on: ubuntu-latest

    env:
      GITHUB_HEAD_REF: ${{ github.head_ref }}
      GITHUB_SPEC_VER: ${GITHUB_HEAD_REF#release/}

    permissions:
      contents: write

    steps:

    - name: Generate a token from Github App
      # github_app_id and github_app_pem_file are used by this workflow because
      # tag-based ruleset restricts ACTOR from bypassing tag protection.
      id: generate-token
      uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
      with:
        app-id: ${{ secrets.SECRET_GITHUB_APP_ID }}
        private-key: ${{ secrets.SECRET_GITHUB_APP_PEM_FILE }}

    - name: Checkout source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        token: ${{ steps.generate-token.outputs.token }}

    - id: set-tag
      shell: bash
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}
      run: |
        # create and push a lightweight tag
        git tag ${GITHUB_SPEC_VER}
        git push origin ${GITHUB_SPEC_VER}

  publish-TestPyPI:

    needs: [push-git-tag]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - shell: bash
      run: |
        # install build dependencies
        make build
        python -m pip install -U twine

    - shell: bash
      run: |
        # check distributions
        tree dist/
        python -m twine check  dist/*

    - shell: bash
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: "${{ secrets.SECRET_PYPITEST }}"
        TWINE_REPOSITORY_URL: "https://test.pypi.org/legacy/"
      run: |
        # Publish distributions to TestPyPI
        python -m twine upload --verbose dist/*

  validate-TestPyPI:

    needs: [publish-TestPyPI]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - shell: bash
      env:
        INDEX_URL: "https://test.pypi.org/simple/"
        EXTRA_INDEX_URL: "https://pypi.org/simple/"
      run: |
        # install package from TestPyPI and run app to show version
        pip install ${{ env.PACKAGE_NAME }} --index-url ${{ env.INDEX_URL }} --extra-index-url ${{ env.EXTRA_INDEX_URL }}
        ${{ env.PACKAGE_NAME }} --version

  publish-PyPI:

    needs: [push-git-tag]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - shell: bash
      run: |
        # install build dependencies
        make build
        pip install -U twine

    - shell: bash
      run: |
        # check distributions
        tree dist/
        python -m twine check  dist/*

    - shell: bash
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: "${{ secrets.SECRET_PYPI }}"
        TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"
      run: |
        # Publish distributions to PyPI
        python -m twine upload --verbose dist/*

  validate-PyPI:

    needs: [publish-PyPI]

    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - shell: bash
      env:
        INDEX_URL: "https://pypi.org/simple/"
      run: |
        # install package from PyPI and run app to show version
        pip install ${{ env.PACKAGE_NAME }}
        ${{ env.PACKAGE_NAME }} --version
